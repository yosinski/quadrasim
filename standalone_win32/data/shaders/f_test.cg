
struct InType {
	float4 position : POSITION;
	float2 texCoord : TEXCOORD0;
	float3 normal   : TEXCOORD1;
	float3 lightVec : TEXCOORD2;
	float3 viewVec  : TEXCOORD3;
};


struct OutType {
  float4 color : COLOR;
};


OutType f_test(
	InType i, 
	uniform sampler2D tex : TEX0
)
{
	OutType o;
	float4 base = tex2D(tex,i.texCoord);
	i.normal   = normalize(i.normal);
	i.lightVec = normalize(i.lightVec);
	i.viewVec  = normalize(i.viewVec);

	float diffuse = dot(i.lightVec, i.normal);
	float specular = pow(saturate(dot(reflect(-i.viewVec, i.normal), i.lightVec)), 8);

	//simple ambient and specular
	o.color=base*(diffuse+0.3) + 0.4*specular;
	return o;
}

